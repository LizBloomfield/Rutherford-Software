import RPi.GPIO as GPIO
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation

# Set up GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setup(24, GPIO.IN)

# Initialize data
data = {'press': 0, 'release': 0}

# Create figure and axis
fig, ax = plt.subplots()
rects = ax.bar(data.keys(), data.values())

# Update function for animation
def update(frame):
    input_state = GPIO.input(24)
    
    if input_state == GPIO.HIGH:
        data['press'] += 1
    else:
        data['release'] += 1

    # Update the heights of the bars
    for rect, value in zip(rects, data.values()):
        rect.set_height(value)

    # Set the title
    ax.set_title('Button Press Histogram')

# Set up the animation
ani = FuncAnimation(fig, update, interval=200)

# Display the plot
plt.show()

#stuff from other page to add in bits
import RPi.GPIO as GPIO
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation

# Set up GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setup(24, GPIO.IN)

# Initialize data
data = {'press': 0, 'release': 0}

# Create figure and axis
fig, ax = plt.subplots()
rects = ax.bar(data.keys(), data.values())

# Update function for animation
def update(frame):
    input_state = GPIO.input(24)
    
    if input_state == GPIO.HIGH:
        data['press'] += 1
    else:
        data['release'] += 1

    # Update the heights of the bars
    for rect, value in zip(rects, data.values()):
        rect.set_height(value)

    # Set the title
    ax.set_title('Button Press Histogram')

# Set up the animation
ani = FuncAnimation(fig, update, interval=200)

# Display the plot
plt.show()
