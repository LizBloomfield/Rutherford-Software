import RPi.GPIO as GPIO
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation

# Set up GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setup(24, GPIO.IN)

# Initialize data
data = {'press': 0, 'release': 0}

# Create figure and axis
fig, ax = plt.subplots()
rects = ax.bar(data.keys(), data.values())

# Update function for animation
def update(frame):
    input_state = GPIO.input(24)
    
    if input_state == GPIO.HIGH:
        data['press'] += 1
    else:
        data['release'] += 1

    # Update the heights of the bars
    for rect, value in zip(rects, data.values()):
        rect.set_height(value)

    # Set the title
    ax.set_title('Button Press Histogram')

# Set up the animation
ani = FuncAnimation(fig, update, interval=200)

# Display the plot
plt.show()

#stuff from other page to add in bits
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
from IPython.display import HTML
plt.style.use('seaborn')
 
np.random.seed(19680804)
HIST_BINS = np.linspace(-4, 4, 100)
data = np.random.randn(1000)
n, _ = np.histogram(data, HIST_BINS)
 
def prepare_animation(bar_container):
     
    def animate(frame_number):
        data = np.random.randn(1000)
        n, _ = np.histogram(data, HIST_BINS)
         
        for count, rect in zip(n, bar_container.patches):
            rect.set_height(count)
         
        return bar_container.patches
     
    return animate
 
fig, ax = plt.subplots()
_, _, bar_container = ax.hist(data, HIST_BINS, lw=1,ec="blue", fc="yellow", alpha=0.5)
ax.set_ylim(top=100)
ani = animation.FuncAnimation(fig, prepare_animation(bar_container), 50,repeat=True, blit=True)
HTML(ani.to_html5_video())
